#!/bin/bash

# Make an ffmpeg movie more or less compatible with Powerpoint (unless png size is too big)
# Call via "ffpngs [-y] [-f framerate] [-s scalefact] directory1 [directory2, ...]"
#   -y              Overwrite without asking
#   -f framerate    Sets the framerate (default 10)
#   -s scalefact    Rescales png width and height by scalefact (default 1)

# Creates an .mp4 movie for each directory, in the same folder as the directory

# Large sections of this script were copied from: https://stackoverflow.com/questions/31124009/how-do-i-pass-in-optional-flags-and-parameters-to-bash-script
# One line is taken from: https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script
# Other parts were written by Scott Feister, November 2017

usage(){
    echo "Converts folder(s) of pngs into mp4(s), using ffmpeg"
    echo "Syntax:"
    echo "  ffpngs [-h] [-y] [-f framerate] [-s scalefact] directory1 [directory2, ...]"
    echo "Main argument(s):"
    echo "  directory1      Specifies a folder containing series of png images"
    echo "Optional flags:"
    echo "  -h              Display this help"
    echo "  -y              Overwrite without asking"
    echo "  -f framerate    Sets the framerate (default 10)"
    echo "  -s scalefact    Rescales png width and height by scalefact (default 1)"
    echo "Outputs:"
    echo "  Creates 'directory1.mp4', in the folder containing 'directory1.'"
    echo "  Repeats this for each input (directory2, directory3, ...)"
    echo "  Note: Skips over any inputs that are not directories."
    echo "Example usage:"
    echo "  ffpngs -f 25 -s 0.5 plotdir*"
    echo "  (Analyzes ./plotdir5/, ./plotdir_Bmag/, and ./plotdir_E/ directories."
    echo "   Skips over non-folder ./plotdir_test.mp4.)"
}

# Set defaults
FRAMERATE=10
SCALEFACT=1
YFLAG=""

# Extract all the arguments
while getopts :hyf:s: opt; do
    case $opt in 
        h) usage; exit 1;;
        y) YFLAG="-y"; echo "-y flag set." ;;
        f) FRAMERATE=$OPTARG; echo "Framerate set" ;;
        s) SCALEFACT=$OPTARG; echo "Scale factor set" ;;
        :) echo "Missing argument for option -$OPTARG"; exit 1;;
       \?) echo "Unknown option -$OPTARG"; exit 1;;
    esac
done

shift $(( OPTIND - 1 ))

# Check that ffmpeg is installed (copied from https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script)
command -v ffmpeg >/dev/null 2>&1 || { echo >&2 "ffpngs requires ffmpeg but it's not installed.  Aborting."; exit 1; }

if [ -z "$1" ]; then
    echo "No directory specified. Try 'ffpngs -h' for help."
    exit 1
fi

CALLDIR=$(pwd)

for pngdir in "$@"; do
    cd $CALLDIR
    dirname=$(basename $pngdir)
    if [ -d "$pngdir" ]; then
        echo "Attempting to make video of directory '$dirname'"
        cd $pngdir
        ffmpeg $YFLAG -framerate $FRAMERATE -pattern_type glob -i '*.png' -vf "[in]scale=iw*${SCALEFACT}:ih*${SCALEFACT}[middle];[middle]crop=trunc(iw/2)*2:trunc(ih/2)*2:0:0[out]" -c:v libx264 -pix_fmt yuv420p "../$dirname.mp4"
    else
        echo "'$dirname' is not a directory. Skipping."
    fi
done
